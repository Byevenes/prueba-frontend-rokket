{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/postReducer.js","reducers/uiReducer.js","reducers/index.js","store/store.js","helpers/config.js","actions/uiAction.js","actions/postAction.js","components/ui/Navbar.js","actions/authAction.js","components/ui/Search.js","components/post/PostEntry.js","components/post/PostEntries.js","components/post/PostTag.js","components/post/PostScreen.js","components/auth/LoginScreen.js","routers/AuthRouter.js","routers/PrivateRouter.js","routers/PublicRouter.js","routers/AppRouter.js","PostApp.js","index.js"],"names":["types","initialState","logged","postLoad","postByTag","postByTagSucces","loading","msgError","rootReducer","combineReducers","auth","state","action","type","post","payload","ui","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","APP_ID_API","BASE_URL","startLoading","finishLoading","getAllPost","dispatch","a","axios","get","headers","resp","data","setPosts","console","error","posts","setTagPost","tags","setTagPostSucces","setTagPostFailed","useStyles","makeStyles","theme","secondary","marginRight","background","color","Navbar","useDispatch","classes","className","AppBar","position","alignitems","Toolbar","Grid","container","justify","wrap","item","Typography","variant","Button","onClick","startIcon","Search","useState","inputVale","setInputVale","useEffect","trim","length","onChange","e","onRequestSearch","tag","Swal","fire","style","margin","maxWidth","marginTop","placeholder","root","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","PostEntry","owner","Card","CardHeader","Avatar","aria-label","src","picture","IconButton","title","firstName","lastName","subheader","email","CardMedia","image","display","flexDirection","justifyContent","alignContent","map","index","borderRadius","textAlign","width","CardContent","component","CardActions","disableSpacing","likes","publishDate","PostEntries","useSelector","flexWrap","paddingBottom","id","PostTag","CircularProgress","PostScreen","primary","LoginScreen","spacing","direction","Paper","elevation","AuthRouter","path","to","PrivateRouter","isLoggedIn","Component","rest","props","PublicRouter","AppRouter","exact","PostApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5aed0c80.chunk.js","sourcesContent":["export const types = {\r\n  /** Authentication */\r\n\r\n  login: '[Auth] Login',\r\n  logout: '[Auth] Logout',\r\n\r\n  /** UI */\r\n\r\n  uiSetError: '[UI] SetError',\r\n  uiRemoveError: '[UI] RemoveError',\r\n\r\n  uiStartLoading: '[UI] StartLoading',\r\n  uiFinishLoading: '[UI] FinishLoading',\r\n\r\n  /** Post  */\r\n\r\n  postGetAll: '[Post] Get All',\r\n  postByTag: '[Post] By Tag',\r\n  postByTagSucces: '[Post] By Tag Succes',\r\n  postByTagFailed: '[Post] By Tag Failed',\r\n\r\n  // notesAddNew: '[Notes] New note',\r\n  // notesActive: '[Notes] Set active note',\r\n  // notesLoad: '[Notes] Load notes',\r\n  // notesUpdate: '[Notes] Updated note',\r\n  // notesFileUrl: '[Notes] Updated image url',\r\n  // notesDelete: '[Notes] Delete note',\r\n  // notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n};\r\n","import { types } from '../types/types';\r\n\r\n/**\r\n * {\r\n *  loggin : false\r\n * }\r\n */\r\n\r\nconst initialState = {\r\n  logged: false,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        ...state,\r\n        logged: true,\r\n      };\r\n\r\n    case types.logout:\r\n      return {\r\n        logged: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from '../types/types';\r\n\r\n/**\r\n * {\r\n *  postLoad : []\r\n *  postByTag : []\r\n * }\r\n */\r\n\r\nconst initialState = {\r\n  postLoad: [],\r\n  postByTag: [],\r\n  postByTagSucces: false,\r\n};\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.postGetAll:\r\n      return {\r\n        ...state,\r\n        postLoad: [...action.payload],\r\n      };\r\n\r\n    case types.postByTag:\r\n      return {\r\n        ...state,\r\n        postByTag: [...action.payload],\r\n      };\r\n    case types.postByTagSucces:\r\n      return {\r\n        ...state,\r\n        postByTagSucces: true,\r\n      };\r\n    case types.postByTagFailed:\r\n      return {\r\n        ...state,\r\n        postByTagSucces: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: null,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload,\r\n      };\r\n\r\n    case types.uiRemoveError:\r\n      return {\r\n        msgError: null,\r\n      };\r\n\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { authReducer } from './authReducer';\r\nimport { postReducer } from './postReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  post: postReducer,\r\n  ui: uiReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers';\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","export const APP_ID_API = '5fdb656e42f8af564ace4393';\r\nexport const BASE_URL = 'https://dummyapi.io/data/api';\r\n","import Swal from 'sweetalert2';\r\nimport { types } from '../types/types';\r\n\r\nexport const setError = (err) => {\r\n  Swal.fire('Error', err, 'error');\r\n  return {\r\n    type: types.uiSetError,\r\n    payload: err,\r\n  };\r\n};\r\n\r\nexport const removeError = () => ({\r\n  type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading,\r\n});\r\n","import axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\nimport { APP_ID_API, BASE_URL } from '../helpers/config';\r\nimport { types } from '../types/types';\r\n\r\nimport { finishLoading, startLoading } from './uiAction';\r\n\r\nexport const getAllPost = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(startLoading());\r\n      const resp = await axios.get(`${BASE_URL}/post`, {\r\n        headers: { 'app-id': APP_ID_API },\r\n      });\r\n      const { data } = resp.data;\r\n      dispatch(setPosts(data));\r\n      dispatch(finishLoading());\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const setPosts = (posts) => ({\r\n  type: types.postGetAll,\r\n  payload: posts,\r\n});\r\n\r\nexport const getByTag = (tag) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      dispatch(startLoading());\r\n      const resp = await axios.get(`${BASE_URL}/tag/${tag}/post?limit=10`, {\r\n        headers: { 'app-id': APP_ID_API },\r\n      });\r\n      const { data } = resp.data;\r\n      if (data.length === 0) {\r\n        Swal.fire(\r\n          'Error ',\r\n          `No se encontro ningun tag con ese nombre ${tag}`,\r\n          'error'\r\n        );\r\n        dispatch(setTagPostFailed());\r\n      } else {\r\n        dispatch(setTagPost(data));\r\n        dispatch(setTagPostSucces());\r\n        dispatch(finishLoading());\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\nexport const setTagPost = (tags) => ({\r\n  type: types.postByTag,\r\n  payload: tags,\r\n});\r\n\r\nexport const setTagPostSucces = () => ({\r\n  type: types.postByTagSucces,\r\n});\r\nexport const setTagPostFailed = () => ({\r\n  type: types.postByTagFailed,\r\n});\r\n","import React from 'react';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Grid, AppBar, Typography, Toolbar } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../../actions/authAction';\r\nimport { setTagPostFailed } from '../../actions/postAction';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  secondary: {\r\n    marginRight: 50,\r\n    background: '#DC004E',\r\n    color: 'white',\r\n\r\n    '&:hover': {\r\n      background: '#DC004E',\r\n      color: 'white',\r\n    },\r\n  },\r\n}));\r\n\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    dispatch(setTagPostFailed());\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className=\" navbar navbar-dark bg-dark mb-4 \">\r\n      <AppBar position=\"static\" alignitems=\"center\" color=\"primary\">\r\n        <Toolbar>\r\n          <Grid container justify=\"center\" wrap=\"wrap\">\r\n            <Grid item>\r\n              <Typography variant=\"h6\"> Rokket Tag</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            variant=\"outlined\"\r\n            className={classes.secondary}\r\n            color=\"secondary\"\r\n            onClick={handleLogout}\r\n            startIcon={<ExitToAppOutlinedIcon />}\r\n          >\r\n            Exit\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","import { types } from '../types/types';\r\n\r\nexport const login = () => ({\r\n  type: types.login,\r\n});\r\n\r\nexport const logout = () => ({\r\n  type: types.logout,\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport SearchBar from 'material-ui-search-bar';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAllPost, getByTag } from '../../actions/postAction';\r\n\r\nexport const Search = () => {\r\n  const dispatch = useDispatch();\r\n  const [inputVale, setInputVale] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (inputVale.trim().length === 0) {\r\n      dispatch(getAllPost());\r\n    }\r\n  }, [dispatch, inputVale]);\r\n\r\n  const handelInputChange = (e) => {\r\n    setInputVale(e);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    if (inputVale.trim().length > 2) {\r\n      dispatch(getByTag(e));\r\n      setInputVale('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar\r\n        onChange={handelInputChange}\r\n        onRequestSearch={handleSubmit}\r\n        style={{\r\n          margin: '0 auto',\r\n          maxWidth: '75%',\r\n          marginTop: 20,\r\n        }}\r\n        placeholder=\"Search by tag\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import moment from 'moment';\r\nimport 'moment/locale/es';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    margin: 20,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\nconst PostEntry = ({ owner, ...post }) => {\r\n  const classes = useStyles();\r\n\r\n  // No pude modificar la fecha con moments no entendi el porque de esto\r\n  //   const datePubling = moment(post.publishDate, 'DD-MM-YYYY HH:mm:ss').toDate();\r\n  //   console.log(datePubling);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar\r\n            aria-label=\"recipe\"\r\n            className={classes.avatar}\r\n            src={owner.picture}\r\n          >\r\n            R\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={`${owner.firstName}  ${owner.lastName}`}\r\n        subheader={owner.email}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={post.image}\r\n        title=\"Paella dish\"\r\n      />\r\n\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'center',\r\n          alignContent: 'center',\r\n        }}\r\n      >\r\n        {post.tags.map((tag, index) => (\r\n          <div\r\n            style={{\r\n              backgroundColor: '#ed2c6c',\r\n              margin: 20,\r\n              borderRadius: 20,\r\n              textAlign: 'center',\r\n              width: '100vw',\r\n              color: 'white',\r\n            }}\r\n            key={index + 1}\r\n          >\r\n            {tag}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          This impressive paella is a perfect party dish and a fun meal to cook\r\n          together with your guests. Add 1 cup of frozen peas along with the\r\n          mussels, if you like.\r\n        </Typography>\r\n      </CardContent>\r\n      <hr />\r\n      <CardActions disableSpacing style={{ justifyContent: 'center' }}>\r\n        <IconButton aria-label=\"add to favorites\" color=\"primary\">\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        {post.likes} Likes {post.publishDate}\r\n      </CardActions>\r\n      <hr />\r\n    </Card>\r\n  );\r\n};\r\n\r\nPostEntry.propTypes = {\r\n  owner: PropTypes.object.isRequired,\r\n  post: PropTypes.object,\r\n};\r\n\r\nexport default PostEntry;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport PostEntry from './PostEntry';\r\n\r\nconst PostEntries = () => {\r\n  const { postLoad, postByTagSucces, postByTag } = useSelector(\r\n    (state) => state.post\r\n  );\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        margin: 20,\r\n        paddingBottom: 20,\r\n      }}\r\n    >\r\n      {postByTagSucces &&\r\n        postByTag.map((tags) => {\r\n          return <PostEntry key={tags.id} {...tags} />;\r\n        })}\r\n\r\n      {!postByTagSucces &&\r\n        postLoad.map((post) => {\r\n          return <PostEntry key={post.id} {...post} />;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostEntries.propTypes = {\r\n  postLoad: PropTypes.array,\r\n};\r\n\r\nexport default PostEntries;\r\n","import React, { useEffect } from 'react';\r\nimport { Search } from '../ui/Search';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllPost } from '../../actions/postAction';\r\n\r\nimport PostEntries from './PostEntries';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport const PostTag = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.ui);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllPost());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\" post-screen\">\r\n      <Search />\r\n      <hr />\r\n      <div style={{ paddingTop: 50 }}>\r\n        {loading ? (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignContent: 'center',\r\n              paddingTop: '15%',\r\n            }}\r\n          >\r\n            <CircularProgress />\r\n          </div>\r\n        ) : (\r\n          <PostEntries />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { PostTag } from './PostTag';\r\n\r\nexport const PostScreen = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <PostTag />\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './login.css';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n} from '@material-ui/core';\r\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../actions/authAction';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  primary: {\r\n    '&:hover': {\r\n      background: '#3f51b5',\r\n      color: 'white',\r\n    },\r\n  },\r\n}));\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleLogin = () => {\r\n    dispatch(login());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" alignitems=\"center\" color=\"primary\">\r\n        <Toolbar>\r\n          <Grid container justify=\"center\" wrap=\"wrap\">\r\n            <Grid item>\r\n              <Typography variant=\"h6\"> Prueba Frontend Rokket</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        justify=\"center\"\r\n        direction=\"row\"\r\n        alignContent=\"center\"\r\n      >\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            spacing={2}\r\n            className=\"login-form\"\r\n          >\r\n            <Paper\r\n              variant=\"elevation\"\r\n              elevation={2}\r\n              className=\"login-background\"\r\n            >\r\n              <Grid item>\r\n                <Typography\r\n                  component=\"h1\"\r\n                  variant=\"h5\"\r\n                  style={{ paddingBottom: 20 }}\r\n                >\r\n                  Sign in\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <form>\r\n                  <Grid container direction=\"column\" spacing={2}>\r\n                    <Grid item>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        startIcon={<SendOutlinedIcon />}\r\n                        className={classes.primary}\r\n                        onClick={handleLogin}\r\n                      >\r\n                        Send\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </Grid>\r\n              <Grid item></Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path=\"/login\" component={LoginScreen} />\r\n\r\n        <Redirect to=\"/login\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRouter = ({\r\n  isLoggedIn,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRouter.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PublicRouter = ({ isLoggedIn, component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRouter.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { PostScreen } from '../components/post/PostScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRouter } from './PrivateRouter';\r\nimport { PublicRouter } from './PublicRouter';\r\n\r\nexport const AppRouter = () => {\r\n  const { logged } = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRouter\r\n            path=\"/login\"\r\n            component={AuthRouter}\r\n            isLoggedIn={logged}\r\n          />\r\n          <PrivateRouter\r\n            exact\r\n            path=\"/\"\r\n            component={PostScreen}\r\n            isLoggedIn={logged}\r\n          />\r\n\r\n          <Redirect to=\"/login\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nexport const PostApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PostApp } from './PostApp';\nimport './styles.css';\n\nReactDOM.render(<PostApp />, document.getElementById('root'));\n"],"sourceRoot":""}